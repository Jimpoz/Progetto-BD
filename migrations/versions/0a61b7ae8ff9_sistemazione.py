"""sistemazione

Revision ID: 0a61b7ae8ff9
Revises: 32849ebc363a
Create Date: 2023-07-21 00:54:24.645838

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0a61b7ae8ff9'
down_revision = '32849ebc363a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    with op.batch_alter_table('docente', schema=None) as batch_op:
        # Add a temporary column with the new length
        batch_op.add_column(sa.Column('temp_idD', sa.String(length=200), nullable=False))

    # ### end Alembic commands ###

    # Perform data migration to copy data from the old column to the temporary column
    conn = op.get_bind()
    conn.execute("UPDATE docente SET temp_idD = idD")

    # Drop the old column
    with op.batch_alter_table('docente', schema=None) as batch_op:
        batch_op.drop_column('idD')

    # Rename the temporary column to the original column name
    with op.batch_alter_table('docente', schema=None) as batch_op:
        batch_op.alter_column('temp_idD', new_column_name='idD')

    # ### additional commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('docente', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['idD'])
    # ### end Alembic commands ###




def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('studente', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ids', sa.INTEGER(), autoincrement=True, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('idS')

    with op.batch_alter_table('prova', schema=None) as batch_op:
        batch_op.add_column(sa.Column('idd', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('idp', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('ide', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('prova_idd_fkey', 'docente', ['idd'], ['idd'])
        batch_op.create_foreign_key('prova_ide_fkey', 'esame', ['ide'], ['ide'])
        batch_op.drop_column('idD')
        batch_op.drop_column('idE')
        batch_op.drop_column('idP')

    with op.batch_alter_table('esame', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ide', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('idE')

    with op.batch_alter_table('docente', schema=None) as batch_op:
        batch_op.add_column(sa.Column('idd', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('idD')

    op.create_table('appelli',
    sa.Column('idp', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ids', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('voto', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stato_superamento', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['idp'], ['prova.idp'], name='appelli_idp_fkey'),
    sa.ForeignKeyConstraint(['ids'], ['studente.ids'], name='appelli_ids_fkey'),
    sa.PrimaryKeyConstraint('idp', 'ids', name='appelli_pkey')
    )
    op.create_table('registrazione_esame',
    sa.Column('ids', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ide', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('voto', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('data_superamento', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ide'], ['esame.ide'], name='registrazione_esame_ide_fkey'),
    sa.ForeignKeyConstraint(['ids'], ['studente.ids'], name='registrazione_esame_ids_fkey'),
    sa.PrimaryKeyConstraint('ids', 'ide', name='registrazione_esame_pkey')
    )
    op.create_table('creazione_esame',
    sa.Column('idd', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ide', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ruolo_docente', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['idd'], ['docente.idd'], name='creazione_esame_idd_fkey'),
    sa.ForeignKeyConstraint(['ide'], ['esame.ide'], name='creazione_esame_ide_fkey'),
    sa.PrimaryKeyConstraint('idd', 'ide', name='creazione_esame_pkey')
    )
    op.drop_table('Appelli')
    op.drop_table('Registrazione_esame')
    op.drop_table('Creazione_esame')
    # ### end Alembic commands ###
